---

# proxy設定
- name: create /etc/profile.d/proxy_setting.sh
  become: yes
  template:
    src: etc/profile.d/proxy_setting.sh.j2
    dest: /etc/profile.d/proxy_setting.sh
    owner: root
    group: root
    mode: 711
  # 適用すべき環境はstageを参照して切り替え
  when: stage == 'production_com' or stage == 'production_biz'
  # when: stage != 'deveropment'

# 上記proxy_setting.shだけではaptが実行できない場合のみ有効化する。
#- name: create /etc/apt/apt.conf.d/30proxy
#  become: yes
#  template:
#    src: etc/apt/apt.conf.d/30proxy.j2
#    dest: /etc/apt/apt.conf.d/30proxy
#    backup: true 
#    owner: root
#    group: root
#    mode: 0644
#  when: stage != "deveropment"
#
#- name: create ~/wgetrc
#  become: yes
#  template:
#    src: home/develop/wgetrc
#    dest: /home/develop/wgetrc
#    owner: develop
#    group: develop
#    mode: 644
#  when: stage != "deveropment"


# proxy設定後にaptを更新
- name: Update and upgrade apt packages
  apt:
    upgrade: "yes"
    update_cache: yes

# 必要パッケージのインストール
- name: install common packages
  apt:
    name:
      - git
      - traceroute
      - build-essential
      - curl
      - wget
      - software-properties-common
      - apt-transport-https
# provisoning /etc/hosts
- name: update /etc/hosts
  become: yes
  template:
    src: etc/hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644

- name: create /etc/systemd/timesyncd.conf
  become: yes
  template:
    src: etc/systemd/timesyncd.conf.j2
    dest: /etc/systemd/timesyncd.conf
    backup: true 
    owner: root
    group: root
    mode: 0644

# timesyncd 設定変更を適用
- name: Restert systemd-timesyncd
  become: yes
  service: name=systemd-timesyncd state=restarted

# 起動時有効化設定
- name: systemd-timesyncd service state
  become: yes
  service:
    name: systemd-timesyncd
    state: started
    enabled: yes

- name: Set timezone to Asia/Tokyo
  timezone:
    name: "{{ time_zone }}"


- name: add user
  user:
    name: "{{ item.u_name }}"
    groups: "{{ item.groups }}"
    password: "{{ item.pass | password_hash('sha512') }}"
    shell: "{{ item.shell }}"
    home: "{{ item.home }}"
    state: present
  with_items: "{{ admin_user }}"

- name: mkdir visualize user home directory
  ansible.builtin.file:
    path: "{{ item.home }}"
    state: directory
    owner: "{{ item.u_name }}"
    group: "{{ item.u_name }}"
    mode: '0755'
  with_items: "{{ admin_user }}"


- name: create visualize user .bashrc
  become: yes
  template:
    src: home/develop/.bashrc.j2
    dest: "{{ item.home }}/.bashrc"
    backup: true 
    owner: "{{ item.u_name }}"
    group: "{{ item.u_name }}"
    mode: 0664
  with_items: "{{ admin_user }}"

- name: root passwd change
  user:
    name: root
    password:  "{{ root_passwd | password_hash('sha512') }}"

#- name: specify DNS
#  lineinfile:
#    state: present
#    dest: /etc/systemd/resolved.conf
#    regexp: ^#DNS=$
#    line: 'DNS={{ dns }}'
#  register: dns_conf_result
