---

# Ubunru22での更新、パッケージ導入後のデーモン自動リスタート設定
# roles/linux-base/templates/etc/needrestart/conf.d/50local.conf
- name: create /etc/needrestart/conf.d/50local.conf
  become: yes
  template:
    src: etc/needrestart/conf.d/50local.conf
    dest: /etc/needrestart/conf.d/50local.conf
    owner: root
    group: root
    mode: 0644

# proxy設定
- name: create /etc/profile.d/proxy_setting.sh
  become: yes
  template:
    src: etc/profile.d/proxy_setting.sh.j2
    dest: /etc/profile.d/proxy_setting.sh
    owner: root
    group: root
    mode: 0755
  # 適用すべき環境はstageを参照して切り替え
  when: stage == 'production'

- name: create /etc/apt/apt.conf.d/30proxy
  become: yes
  template:
    src: etc/apt/apt.conf.d/30proxy.j2
    dest: /etc/apt/apt.conf.d/30proxy
    backup: true 
    owner: root
    group: root
    mode: 0644
  when: stage == "production"

- name: create ~/wgetrc
  become: yes
  template:
    src: home/develop/wgetrc
    dest: /home/develop/.wgetrc
    owner: develop
    group: develop
    mode: 0644
  when: stage == "production"

# proxy設定後にaptを更新
- name: Update and upgrade apt packages
  apt:
    upgrade: "yes"
    update_cache: yes

# 必要パッケージのインストール
- name: install common packages
  apt:
    name:
      - git
      - traceroute
      - build-essential
      - curl
      - wget
      - software-properties-common
      - apt-transport-https

- name: install libproxy-tools
  become: yes
  apt:
    name:
      - libproxy-tools
  when: stage == 'production'


# provisoning /etc/hosts
- name: update /etc/hosts
  become: yes
  template:
    src: etc/hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644
 
# 商用環境のsystemd-timesyncdがmaskされている問題->ummaskする。
- name: unmask systemd-timesyncd
  become: yes
  command:
    cmd: 'systemctl unmask systemd-timesyncd'
  when: stage == 'production'

# 商用環境のsystemd-timesyncdがmaskされている問題の別対処。
- name: install systemd-timesyncd
  become: yes
  ansible.builtin.apt:
    name: systemd-timesyncd
    state: latest
    update_cache: yes

- name: Start service systemd-timesyncd, , in all cases
  become: yes
  ansible.builtin.service:
    name: systemd-timesyncd
    state: restarted


- name: create /etc/systemd/timesyncd.conf
  become: yes
  template:
    src: etc/systemd/timesyncd.conf.j2
    dest: /etc/systemd/timesyncd.conf
    backup: true 
    owner: root
    group: root
    mode: 0644

# timesyncd 設定変更を適用
- name: Restert systemd-timesyncd
  become: yes
  service: name=systemd-timesyncd state=restarted

# 起動時有効化設定
- name: systemd-timesyncd service state
  become: yes
  service:
    name: systemd-timesyncd
    state: started
    enabled: yes

- name: Set timezone to Asia/Tokyo
  timezone:
    name: "{{ time_zone }}"

- name: add user
  user:
    name: "{{ item.u_name }}"
    groups: "{{ item.groups }}"
    password: "{{ item.pass | password_hash('sha512') }}"
    shell: "{{ item.shell }}"
    home: "{{ item.home }}"
    state: present
  with_items: "{{ admin_user }}"

- name: mkdir visualize user home directory
  ansible.builtin.file:
    path: "{{ item.home }}"
    state: directory
    owner: "{{ item.u_name }}"
    group: "{{ item.u_name }}"
    mode: '0755'
  with_items: "{{ admin_user }}"

- name: create visualize user .bashrc
  become: yes
  template:
    src: home/develop/.bashrc.j2
    dest: "{{ item.home }}/.bashrc"
    backup: true 
    owner: "{{ item.u_name }}"
    group: "{{ item.u_name }}"
    mode: 0664
  with_items: "{{ admin_user }}"

- name: root passwd change
  become: yes
  user:
    name: root
    password:  "{{ root_passwd | password_hash('sha512') }}"

- name: create symblic link python
  ansible.builtin.file:
    src: /usr/bin/python3.10
    dest: /usr/bin/python
    owner: root
    group: root
    state: link

