---

- name: install cacti native dependency package
  apt:
    name:
      "{{ native_packages }}"


- name: download & unzip cacti.tar.gz
  ansible.builtin.unarchive:
    src: "{{ cacti_download_url }}"
    dest: /var/www
    owner: www-data 
    group: www-data
    mode: 0640
    remote_src: yes

- name: directory check
  stat:
    path: "{{ cacti_root_path  }}"
  register: d

#- name: debug d
#  debug:
#    msg: "skip skip skip"
#  when:
#    - d.stat.exists == true
#    - d.stat.isdir == true

- name: directory_name chenge
  command:
    cmd: "mv {{ cacti_unarchive_path }} {{ cacti_root_path  }}"
    removes: "{{ cacti_unarchive_path }}"
  when:
    - d.stat.exists == false
    - d.stat.isdir == false

- name: unarchive_dir_check
  stat:
    path: "{{ cacti_unarchive_path }}"
  register: u

- name: erace unarchive_dir
  command:
    cmd: "rm -rf {{ cacti_unarchive_path }}"
  when:
    - u.stat.exists == true
    - u.stat.isdir == true

- name: create a new virtual host file for the Cacti site
  become: yes
  template:
    src: etc/apache2/sites-available/cacti.conf.j2
    dest: /etc/apache2/sites-available/cacti.conf
    backup: true
    owner: root
    group: root
    mode: 0644

- name: Restart service apache2
  ansible.builtin.systemd:
    name: apache2.service
    state: restarted

