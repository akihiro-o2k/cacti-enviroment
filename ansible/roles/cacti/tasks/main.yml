---

- name: install cacti native dependency package
  apt:
    name:
      "{{ native_packages }}"

- name: directory check
  stat:
    path: "{{ cacti_root_path  }}"
  register: d

- name: debug d
  debug:
    msg: "skip skip skip"
    msg: "{{ d }}"
  when:
    - d.stat.exists == true
    - d.stat.isdir == true

- name: download & unzip cacti.tar.gz
  ansible.builtin.unarchive:
    src: "{{ cacti_download_url }}"
    dest: /var/www
    owner: www-data 
    group: www-data
    mode: 0755
    remote_src: yes
  when:
    - d.stat.exists != true
    - d.stat.isdir != true

- name: unarchive_dir_check
  stat:
    path: "{{ cacti_unarchive_path }}"
  register: u

- name: directory_name chenge
  command:
    cmd: "mv {{ cacti_unarchive_path }} {{ cacti_root_path  }}"
  when:
    - d.stat.isdir != true and u.stat.isdir == true


- name: erace unarchive_dir
  command:
    cmd: "rm -rf {{ cacti_unarchive_path }}"
  when:
    - u.stat.exists == true
    - u.stat.isdir == true

- name: create a new virtual host file for the Cacti site
  become: yes
  template:
    src: etc/apache2/sites-available/cacti.conf.j2
    dest: /etc/apache2/sites-available/cacti.conf
    backup: true
    owner: root
    group: root
    mode: 0644

- name: symbolic link check
  stat:
    path: /etc/apache2/sites-enabled/cacti.conf
  register: s

- name: create symbleic_link cacti.conf
  command:
    cmd: "ln -s /etc/apache2/sites-available/cacti.conf /etc/apache2/sites-enabled/cacti.conf"
  when:
    - s.stat.islnk != true

- name: Restart service apache2
  ansible.builtin.systemd:
    name: apache2.service
    state: restarted

- name: create cacti config.php
  become: yes
  template:
    src: var/www/cacti/include/config.php.j2
    dest: /var/www/cacti/include/config.php
    backup: true
    owner: www-data
    group: www-data
    mode: 0755

- name: check NetworkWeathermap setting file
  stat:
    path: /var/www/cacti/site/plugins/weathermap.conf
  register: w

- name: create .gitconfig
  become: yes
  template:
    src: .gitconfig.j2
    dest: /home/develop/.gitconfig
    owner: develop
    group: develop
    mode: 0644
  when: stage == "production"

- name: Install NetworkWeathermap
  git:
    repo: https://github.com/howardjones/network-weathermap.git
    dest: /var/www/cacti/site/plugins
  become: yes
  when:
    - w.stat.exists != true

- name: plugins owner chenge
  command:
      cmd: 'chown -R www-data:www-data /var/www/cacti/site/plugins/'

- name: setup npm proxy
  command:
     cmd: "npm config set {{ item }} http://{{ proxy_user }}:{{ proxy_pass }}@{{ proxy_server }}:{{ proxy_port }}"
  with_items:  
    - proxy
    - https-proxy
  when: stage == "production"

- name: Install "bower" node.js package globally.
  npm:
    name: bower 
    global: yes
